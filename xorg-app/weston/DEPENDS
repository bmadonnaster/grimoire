depends  meson     &&
depends  ninja-build-system &&
depends  python3   &&
depends  pkgconfig &&
depends  libpng    &&
depends  libxkbcommon &&
depends  MESA   &&
depends  DEVICE-MANAGER &&
depends  cairo     &&
depends  JPEG      &&
depends  libinput  &&
depends  poppler   &&
depends  mtdev     &&
depends  pixman    &&
depends  glu       &&
depends  wayland-protocols &&

optional_depends lcms2 "color-management-lcms=true" \
                       "color-management-lcms=false" \
                       "colour management" &&
optional_depends colord "color-management-colord=true" \
                        "color-management-colord=false" \
                        "colour management daemon" &&
optional_depends libxcb "backend-x11=true" "backend-x11=false" \
                        "Build the X11 compositor" &&
optional_depends JPEG "image-jpeg=true" "image-jpeg=false" \
                      "JPEG loading support" &&
optional_depends libwebp "image-webp=true" "image-webp=false" \
                         "WebP loading support" &&
optional_depends libva   \
                 "backend-drm-screencast-vaapi=true" \
                 "backend-drm-screencast-vaapi=false" \
                 "build vaapi recorder" &&
optional_depends wayland "backend-wayland=true" \
                         "backend-wayland=false" \
                         "Build the Wayland (nested) compositor" &&
optional_depends libdrm "backend-drm=true" "backend-drm=false" \
                        "Build the DRM compositor" &&
optional_depends linux-pam "weston-launch=true" "weston-launch=false" \
                         "Build weston-launch"
optional_depends pango "" "" "" &&
optional_depends -sub "XWAYLAND" XSERVER \
                "xwayland=true" \
                "xwayland=false" \
                "XWayland support" &&
optional_depends systemd \
                "systemd=true" \
                "systemd=false" \
                "systemd service plugin" &&
optional_depends LOGIN-DAEMON "launcher-logind=true" "launcher-logind=false" \
                 "logind protocol support" &&
optional_depends freerdp "backend-rdp=true" "backend-rdp=false" "RDP compositor" &&

if is_depends_enabled "${SPELL}" "libdrm"; then
  optional_depends gstreamer-1.0 "remoting=true" "remoting=false" "remote output"
fi

