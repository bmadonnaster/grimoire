           SPELL=enchant
         VERSION=1.6.0
  SOURCE_HASH[0]=sha512:0ca1634bb783df51512df4abecc89abdadee6baf7330d6e5f90cc15d10779896a3521a1c079ecc07e4df4f7a018ce398cca9d0125a7845a314a059840ebc9137
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=http://www.abisource.com/downloads/$SPELL/$VERSION/$SOURCE
      LICENSE[0]=GPL
        WEB_SITE=https://abiword.github.io/enchant/
         ENTERED=20040712
        KEYWORDS="gnome2 libs"
           SHORT="Spell checking library that works with Abiword"
cat << EOF
On the surface, Enchant appears to be a generic spell checking library.
You can request dictionaries from it, ask if a word is correctly spelled,
get corrections for a misspelled word, etc.

Beneath the surface, Enchant is a whole lot more - and less - than that.
You'll see that Enchant isn't really a spell checking library at all.

"What's that?" you ask. Well, Enchant doesn't try to do any of the work
itself. It's lazy, and requires backends to do most of its dirty work.
Looking closer, you'll see the Enchant is more-or-less a fancy wrapper
around the dlopen() system call. Enchant steps in to provide uniformity
and conformity on top of these libraries, and implement certain features
that may be lacking in any individual provider library. Everything should
"just work" for any and every definition of "just working."
EOF
