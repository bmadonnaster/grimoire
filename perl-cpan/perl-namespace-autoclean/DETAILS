           SPELL=perl-namespace-autoclean
         VERSION=0.28
          SOURCE="namespace-autoclean-${VERSION}.tar.gz"
   SOURCE_URL[0]=$PERL_CPAN_URL/authors/id/E/ET/ETHER/${SOURCE}
     SOURCE_HASH=sha512:2541f69862b334fcfe30059d025668175de1b182a5c8ee8f2619bf1d661c316a38fe2014f274bb23e887cd36959f98abb297154ac8ceb600e2e93cbd4a75e28d
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/namespace-autoclean-${VERSION}"
        WEB_SITE="http://search.cpan.org/~ether/namespace-autoclean/"
      LICENSE[0]="ART"
         ENTERED=20180105
        KEYWORDS=""
           SHORT="namespace::autoclean - Keep imports out of your namespace"
cat << EOF
When you import a function into a Perl package, it will naturally also be
available as a method.

The namespace::autoclean pragma will remove all imported symbols at the
end of the current package's compile cycle. Functions called in the package
itself will still be bound by their name, but they won't show up as methods
on your class or instances.

This module is very similar to namespace::clean, except it will clean all
imported functions, no matter if you imported them before or after you used
the pragma. It will also not touch anything that looks like a method.
EOF
