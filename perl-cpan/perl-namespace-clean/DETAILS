           SPELL=perl-namespace-clean
         VERSION=0.27
          SOURCE="namespace-clean-$VERSION.tar.gz"
   SOURCE_URL[0]=$PERL_CPAN_URL/authors/id/R/RI/RIBASUSHI/$SOURCE
     SOURCE_HASH=sha512:4422640656602e44c6d3675e55a0e699f8c0e07abbaf11f0b0905043f90e13bb95ee0eaa4c4a08c853296825dd8ef33c806e0a7c284a70448e35ac3354545744
SOURCE_DIRECTORY="$BUILD_DIRECTORY/namespace-clean-$VERSION"
        WEB_SITE="http://search.cpan.org/~ribasushi/namespace-clean/"
      LICENSE[0]="ART"
         ENTERED=20180105
        KEYWORDS=""
           SHORT="namespace::clean - Keep imports and functions out of your namespace"
cat << EOF
When you define a function, or import one, into a Perl package, it will
naturally also be available as a method. This does not per se cause problems,
but it can complicate subclassing and, for example, plugin classes that are
included via multiple inheritance by loading them as base classes.

The namespace::clean pragma will remove all previously declared or imported
symbols at the end of the current package's compile cycle. Functions called
in the package itself will still be bound by their name, but they won't show
up as methods on your class or instances.
EOF
