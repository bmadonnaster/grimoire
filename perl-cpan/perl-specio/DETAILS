           SPELL=perl-specio
         VERSION=0.42
          SOURCE="Specio-$VERSION.tar.gz"
   SOURCE_URL[0]=$PERL_CPAN_URL/authors/id/D/DR/DROLSKY/$SOURCE
     SOURCE_HASH=sha512:7a9ff3e96cf3957d7857cd5f6af5efd9e35fc4c888fcd8177041e34a2388f54269e7a3da84ec60961fb61307beb882ebf54e19ae4346876e06197b1ff57891a0
SOURCE_DIRECTORY="$BUILD_DIRECTORY/Specio-$VERSION"
        WEB_SITE="http://search.cpan.org/~drolsky/Specio/"
      LICENSE[0]="ART"
         ENTERED=20180105
        KEYWORDS=""
           SHORT="Specio - Type constraints and coercions for Perl"
cat << EOF
The Specio distribution provides classes for representing type constraints and
coercion, along with syntax sugar for declaring them.

Note that this is not a proper type system for Perl. Nothing in this
distribution will magically make the Perl interpreter start checking a value's
type on assignment to a variable. In fact, there's no built-in way to apply a
type to a variable at all.

Instead, you can explicitly check a value against a type, and optionally coerce
values to that type.

My long-term goal is to replace Moose's built-in types and MooseX::Types with
this module.
EOF
