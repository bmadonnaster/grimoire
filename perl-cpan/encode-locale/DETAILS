           SPELL=encode-locale
         VERSION=1.05
          SOURCE="Encode-Locale-${VERSION}.tar.gz"
   SOURCE_URL[0]=$PERL_CPAN_URL/authors/id/G/GA/GAAS/${SOURCE}
     SOURCE_HASH=sha512:68ed5732fd3645eca2ea54080067677a48f90fc5a594a1b453a322f3127e67a984d539cb5fd41ac63a03b9dab693c070b65e3c70a2a677dc61b4634f3e212d06
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/Encode-Locale-${VERSION}"
        WEB_SITE="https://search.cpan.org/~gaas/Encode-Locale/"
      LICENSE[0]=ART
         ENTERED=20120902
           SHORT="determine the locale encoding"
cat << EOF
In many applications it's wise to let Perl use Unicode for the strings it
processes. Most of the interfaces Perl has to the outside world are still
byte based. Programs therefore need to decode byte strings that enter the
program from the outside and encode them again on the way out.

The POSIX locale system is used to specify both the language conventions
requested by the user and the preferred character set to consume and output.
The Encode::Locale module looks up the charset and encoding (called a CODESET
in the locale jargon) and arranges for the Encode module to know this encoding
under the name "locale". It means bytes obtained from the environment can
be converted to Unicode strings by calling Encode::encode(locale => $bytes)
and converted back again with Encode::decode(locale => $string).
EOF
