           SPELL=tcptraceroute
         VERSION=1.5beta7
      PATCHLEVEL=1
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=http://michael.toren.net/code/tcptraceroute/$SOURCE
     SOURCE_HASH=sha512:bd975872e6a2132cc88bdcb3f680d30741cf4265c618a5c2dc36e356d53dd8f7ecccdf798372bacf4dc616abe6dccae910cc7398c35091243cd53ac0f29953ae
        WEB_SITE=http://michael.toren.net/code/tcptraceroute/
         ENTERED=20060901
      LICENSE[0]=GPL
        KEYWORDS="net"
           SHORT="tcptraceroute is a traceroute implementation using TCP packets."
cat << EOF
tcptraceroute is a traceroute implementation using TCP packets.

The more traditional traceroute(8) sends out either UDP or ICMP ECHO packets
with a TTL of one, and increments the TTL until the destination has been
reached. By printing the gateways that generate ICMP time exceeded messages
along the way, it is able to determine the path packets are taking to reach
the destination.

The problem is that with the widespread use of firewalls on the modern
Internet, many of the packets that traceroute(8) sends out end up being
filtered, making it impossible to completely trace the path to the
destination. However, in many cases, these firewalls will permit inbound
TCP packets to specific ports that hosts sitting behind the firewall are
listening for connections on. By sending out TCP SYN packets instead of
UDP or ICMP ECHO packets, tcptraceroute is able to bypass the most common
firewall filters.
EOF
