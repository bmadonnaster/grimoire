From 30c29986235c24607e484e9bf7246666a249cc9c Mon Sep 17 00:00:00 2001
From: Ismael Luceno <ismael@iodev.co.uk>
Date: Mon, 18 Apr 2022 19:07:19 +0200
Subject: [PATCH 3/4] Fix unused variable warnings

Signed-off-by: Ismael Luceno <ismael@iodev.co.uk>
---
 math_group.c | 5 ++---
 sysdep.c     | 4 ++--
 tunip.c      | 4 +---
 vpnc.c       | 6 ++----
 4 files changed, 7 insertions(+), 12 deletions(-)

diff --git a/math_group.c b/math_group.c
index 5590450483e5..05d0d2e13f63 100644
--- a/math_group.c
+++ b/math_group.c
@@ -240,10 +240,9 @@ static void modp_getraw(struct group *grp, gcry_mpi_t v, unsigned char *d)
 {
 	size_t l, l2;
 	unsigned char *tmp;
-	int ret;
 
 	l = grp->getlen(grp);
-	ret = gcry_mpi_aprint(GCRYMPI_FMT_STD, &tmp, &l2, v);
+	gcry_mpi_aprint(GCRYMPI_FMT_STD, &tmp, &l2, v);
 	memcpy(d, tmp + (l2 - l), l);
 	gcry_free(tmp);
 #if 0
@@ -260,7 +259,7 @@ static int modp_setraw(struct group *grp, gcry_mpi_t d, unsigned char *s, int l)
 {
 	int i;
 
-	grp = NULL; /* unused */
+	(void)grp; /* unused */
 
 	gcry_mpi_set_ui(d, 0);
 	for (i = 0; i < l; i++) {
diff --git a/sysdep.c b/sysdep.c
index ff07753d7c6e..1f6d23502dca 100644
--- a/sysdep.c
+++ b/sysdep.c
@@ -510,13 +510,13 @@ int tun_close(int fd, char *dev)
 #elif defined(__CYGWIN__)
 int tun_close(int fd, char *dev)
 {
-	dev = NULL; /* unused */
+	(void)dev; /* unused */
 	return CloseHandle((HANDLE) get_osfhandle(fd));
 }
 #else
 int tun_close(int fd, char *dev)
 {
-	dev = NULL; /*unused */
+	(void)dev; /*unused */
 	return close(fd);
 }
 #endif
diff --git a/tunip.c b/tunip.c
index 19db71736cd5..262cf987c8b1 100644
--- a/tunip.c
+++ b/tunip.c
@@ -490,9 +490,7 @@ static int encap_esp_recv_peer(struct sa_block *s)
 	unsigned char padlen, next_header;
 	unsigned char *pad;
 	unsigned char *iv;
-	struct esp_encap_header *eh;
 
-	eh = (struct esp_encap_header *)(s->ipsec.rx.buf + s->ipsec.rx.bufpayload);
 	s->ipsec.rx.var_header_size = s->ipsec.iv_len;
 	iv = s->ipsec.rx.buf + s->ipsec.rx.bufpayload + s->ipsec.em->fixed_header_size;
 
@@ -655,7 +653,7 @@ static int process_non_ip(struct sa_block *s, uint8_t *frame)
 {
 	struct ether_header *eth = (struct ether_header *) frame;
 	
-	s = NULL; /* unused */
+	(void)s; /* unused */
 	
 	if (ntohs(eth->ether_type) != ETHERTYPE_IP) {
 		/* drop non-ip traffic */
diff --git a/vpnc.c b/vpnc.c
index 474d94029c89..4631b8ff6794 100644
--- a/vpnc.c
+++ b/vpnc.c
@@ -740,7 +740,6 @@ static void send_phase2_late(struct sa_block *s, struct isakmp_payload *pl,
 	struct isakmp_packet *p;
 	uint8_t *p_flat;
 	size_t p_size;
-	ssize_t recvlen;
 
 	/* Build up the packet.  */
 	p = new_isakmp_packet();
@@ -758,7 +757,7 @@ static void send_phase2_late(struct sa_block *s, struct isakmp_payload *pl,
 
 	s->ike.life.tx += p_size;
 
-	recvlen = sendrecv(s, NULL, 0, p_flat, p_size, 1);
+	sendrecv(s, NULL, 0, p_flat, p_size, 1);
 	free(p_flat);
 }
 
@@ -1306,7 +1305,7 @@ static void do_phase1_am(const char *key_id, const char *shared_key, struct sa_b
 		struct isakmp_payload *last_cert = NULL;
 		struct isakmp_payload *sig = NULL;
 		struct isakmp_payload *idp = NULL;
-		int seen_sa = 0, seen_xauth_vid = 0;
+		int seen_sa = 0;
 		unsigned char *psk_skeyid;
 		unsigned char *skeyid;
 		gcry_md_hd_t skeyid_ctx;
@@ -1490,7 +1489,6 @@ static void do_phase1_am(const char *key_id, const char *shared_key, struct sa_b
 				if (rp->u.vid.length == sizeof(VID_XAUTH)
 					&& memcmp(rp->u.vid.data, VID_XAUTH,
 						sizeof(VID_XAUTH)) == 0) {
-					seen_xauth_vid = 1;
 				} else if (rp->u.vid.length == sizeof(VID_NATT_RFC)
 					&& memcmp(rp->u.vid.data, VID_NATT_RFC,
 						sizeof(VID_NATT_RFC)) == 0) {
-- 
2.35.3

