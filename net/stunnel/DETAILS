           SPELL=stunnel
         VERSION=5.64
  SECURITY_PATCH=2
          SOURCE=$SPELL-$VERSION.tar.gz
         SOURCE2=$SOURCE.asc
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
   SOURCE_URL[0]=ftp://ftp.stunnel.org/stunnel/archive/${VERSION%.*}.x/$SOURCE
   SOURCE_URL[1]=http://www.usenix.org.uk/mirrors/stunnel/archive/${VERSION%.*}.x/$SOURCE
   SOURCE_URL[2]=ftp://ftp.nluug.nl/pub/networking/stunnel/archive/${VERSION%.*}.x/$SOURCE
  SOURCE2_URL[0]=$SOURCE_URL.asc
  SOURCE2_URL[1]=${SOURCE_URL[1]}.asc
  SOURCE2_URL[2]=${SOURCE_URL[2]}.asc
      SOURCE_GPG="stunnel.gpg:$SOURCE2:UPSTREAM_KEY"
  SOURCE2_IGNORE=signature
      ACTIVE_FTP=on
        WEB_SITE=http://www.stunnel.org/
        KEYWORDS="net"
         ENTERED=20011108
           SHORT="multiplatform SSL tunneling proxy"
cat << EOF
The stunnel program is designed to work as an SSL encryption wrapper between
remote client and local (inetd-startable) or remote server. It can be used to
add SSL functionality to commonly used inetd daemons like POP2, POP3, and IMAP
servers without any changes in the programs' code. 
Stunnel uses OpenSSL or SSLeay libraries for cryptography, so it supports
whatever cryptographic algorithms you compiled into your library. 
See stunnel(8) manual for details.

For UDP forwarding, also look at zebedee
EOF
