           SPELL=sslh
         VERSION=1.18
          SOURCE=${SPELL}-v${VERSION}.tar.gz
         SOURCE2=${SOURCE}.asc
   SOURCE_URL[0]=http://www.rutschle.net/tech/${SPELL}/${SOURCE}
  SOURCE2_URL[0]=${SOURCE_URL}.asc
      SOURCE_GPG=sslh.gpg:${SOURCE2}:UPSTREAM_KEY
  SOURCE2_IGNORE=signature
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-v${VERSION}"
            DOCS="ChangeLog TODO example.cfg ${DOCS}"
        WEB_SITE=http://www.rutschle.net/sslh
      LICENSE[0]="GPLv2+"
         ENTERED=20150228
        KEYWORDS="proxy"
           SHORT="applicative protocol multiplexer"
cat << EOF
sslh accepts connections on specified ports, and forwards them further based
on tests performed on the first data packet sent by the remote client.

Probes for HTTP, SSL, SSH, OpenVPN, tinc, XMPP are implemented, and any other
protocol that can be tested using a regular expression, can be recognised. A
typical use case is to allow serving several services on port 443 (e.g. to
connect to ssh from inside a corporate firewall, which almost never block
port 443) while still serving HTTPS on that port.

Hence sslh acts as a protocol demultiplexer, or a switchboard. Its name
comes from its original function to serve SSH and HTTPS on the same port.

sslh supports IPv6, privilege dropping, transparent proxying, and more.
EOF
