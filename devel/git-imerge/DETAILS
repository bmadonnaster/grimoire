. "$GRIMOIRE/FUNCTIONS"
           SPELL=git-imerge
if [[ "$GIT_IMERGE_BRANCH" == "scm" ]]; then
         VERSION=$(get_scm_version)
          SOURCE="$SPELL-git.tar.bz2"
   SOURCE_URL[0]="git://github.com/mhagger/$SPELL.git"
   SOURCE_IGNORE=volatile
 SOURCE_DOWNLOAD=on
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-git"
else
         VERSION=1.2.0
     SOURCE_HASH=sha512:63734091b95edf8881f776422cf8186544f849c46b010884f40b2ccdae7e02302467e040bd5b71d44a489b58255963cb97b61fe0ceae4c22e82a3823a6ad6828
          SOURCE=$SPELL-$VERSION.tar.gz
   SOURCE_URL[0]=https://github.com/mhagger/git-imerge/archive/v${VERSION}.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
fi
        WEB_SITE="http://github.com/mhagger/git-imerge"
      LICENSE[0]="GPLv2+"
         ENTERED=20141209
        KEYWORDS=""
           SHORT="Incremental merge and rebase for git"
cat << EOF
Perform a merge between two branches incrementally. If conflicts are
encountered, figure out exactly which pairs of commits conflict, and present
the user with one pairwise conflict at a time for resolution.

git-imerge has two primary design goals:

Reduce the pain of resolving merge conflicts to its unavoidable minimum,
by finding and presenting the smallest possible conflicts: those between the
changes introduced by one commit from each branch.  Allow a merge to be saved,
tested, interrupted, published, and collaborated on while it is in progress.
EOF
