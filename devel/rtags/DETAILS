source "${GRIMOIRE}/CMAKE_FUNCTIONS"
           SPELL=rtags
         VERSION=2.38
          SOURCE="${SPELL}-${VERSION}.tar.bz2"
   SOURCE_URL[0]=https://github.com/Andersbakken/${SPELL}/releases/download/v${VERSION}/${SOURCE}
     SOURCE_HASH=sha512:36d2e9ebcaf970ace8bc6c4c0567ffdfbb9f1a1bc66f297664798d69adf3180467cf8dacd74ca0be747da9a168ee57eedc0c79ea6340a215c58506b67ab590ab
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-${VERSION}"
        WEB_SITE="https://github.com/Andersbakken/rtags"
      LICENSE[0]=GPL
         ENTERED=20210613
           SHORT="a client/server application that indexes C/C++ code"
cat << EOF
RTags is a client/server application that indexes C/C++ code and keeps a
persistent file-based database of references, declarations, definitions,
symbolnames etc. There’s also limited support for ObjC/ObjC++. It allows
you to find symbols by name (including nested class and namespace scope). Most
importantly we give you proper follow-symbol and find-references support. We
also have neat little things like rename-symbol, integration with clang’s
“fixits”. We also integrate with flymake using clang’s vastly superior
errors and warnings. Since RTags constantly will reindex “dirty” files
you get live updates of compiler errors and warnings. Since we already know
how to compile your sources we have a way to quickly bring up the preprocessed
output of the current source file in a buffer.
EOF
