Source: Void-Linux

--- a/tools/lvmcmdline.c
+++ b/tools/lvmcmdline.c
@@ -3135,7 +3135,7 @@
	int err = is_valid_fd(STDERR_FILENO);

	if (!is_valid_fd(STDIN_FILENO) &&
-	    !(stdin = fopen(_PATH_DEVNULL, "r"))) {
+	    !freopen(_PATH_DEVNULL, "r", stdin)) {
		if (err)
			perror("stdin stream open");
		else
@@ -3145,7 +3145,7 @@
	}

	if (!is_valid_fd(STDOUT_FILENO) &&
-	    !(stdout = fopen(_PATH_DEVNULL, "w"))) {
+	    !freopen(_PATH_DEVNULL, "w", stdout)) {
		if (err)
			perror("stdout stream open");
		/* else no stdout */
@@ -3153,7 +3153,7 @@
	}

	if (!is_valid_fd(STDERR_FILENO) &&
-	    !(stderr = fopen(_PATH_DEVNULL, "w"))) {
+	    !freopen(_PATH_DEVNULL, "w", stderr)) {
		printf("stderr stream open: %s\n",
		       strerror(errno));
		return 0;
--- a/lib/commands/toolcontext.c
+++ b/lib/commands/toolcontext.c
@@ -1594,7 +1594,7 @@
	/* FIXME Make this configurable? */
	reset_lvm_errno(1);

-#ifndef VALGRIND_POOL
+#if !defined(VALGRIND_POOL) && defined(__GLIBC__)
	/* Set in/out stream buffering before glibc */
	if (set_buffering) {
		/* Allocate 2 buffers */
@@ -1962,7 +1962,7 @@
	if (cmd->libmem)
		dm_pool_destroy(cmd->libmem);

-#ifndef VALGRIND_POOL
+#if !defined(VALGRIND_POOL) && defined(__GLIBC__)
	if (cmd->linebuffer) {
		/* Reset stream buffering to defaults */
		if (is_valid_fd(STDIN_FILENO) &&
