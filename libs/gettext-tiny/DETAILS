           SPELL=gettext-tiny
         VERSION=0.3.1
          SOURCE="${SPELL}-${VERSION}.tar.xz"
   SOURCE_URL[0]=http://ftp.barfooze.de/pub/sabotage/tarballs/${SOURCE}
     SOURCE_HASH=sha512:a2d88d3d0989a2f775d7940c28470f4cb80e41f190b69c65f61890764c73f96810006320e9daaf717e9fccd93eb541ca0c818bd58b2180713e030ad788263060
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-${VERSION}"
        WEB_SITE="https://github.com/sabotage-linux/gettext-tiny"
      LICENSE[0]="MIT"
         ENTERED=20190417
        KEYWORDS=""
           SHORT="Lightweight replacement for the GNU gettext suite"
cat << EOF
gettext-tiny provides lightweight replacements for tools typically
used from the GNU gettext suite, which is incredibly bloated and takes
a lot of time to build (in the order of an hour on slow devices). the
most notable component is msgfmt which is used to create binary
translation files in the .mo format out of textual input files in .po
format. this is the most important tool for building software from
source, because it is used from the build processes of many software
packages.

our msgfmt implementation was initially a fake implementation that
would just output the english input string as the translation, which
is sufficient to get software to work, but it has since grown into a
complete implementation. unlike the GNU implementation, it can even
expand input strings containing so-called sysdep strings into a
constant translation table. sysdep strings were glued as an
after-thought onto the GNU implementation to deal with system-specific
format strings, and in the GNU implementation those are created at
runtime, which requires mapping the entire .mo file into read/write
memory locations, thereby wasting precious RAM for read-only data that
could otherwise be shared among processes.

other parts of gettext-tiny such as xgettext and msgmerge are still
stubs, but they are sufficient to build many packages.

since musl libc, our preferred target, didn't provide a libintl in the
past, (and it's also part of GNU gettext) we also ship a no-op libintl
providing a header and a library.
EOF
