source "${GRIMOIRE}/CMAKE_FUNCTIONS"
           SPELL=crossguid
         VERSION=0.2.2
          SOURCE=$SPELL-$VERSION.tar.gz
   SOURCE_URL[0]=https://github.com/graeme-hill/crossguid/archive/v$VERSION.tar.gz
     SOURCE_HASH=sha512:49a707f830b32ba136bd52e72dda191a7d29acee9795df54f225bb269853cc123390c01875dd1da7cbaebd5bb7001988d6f9758dcffa9171b5f2961f576682ca
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-${VERSION}"
        WEB_SITE="https://github.com/graeme-hill/crossguid"
      LICENSE[0]=MIT
         ENTERED=20160207
           SHORT="a minimal, cross platform, C++ GUID library"
cat << EOF
CrossGuid is a minimal, cross platform, C++ GUID library. It uses the best
native GUID/UUID generator on the given platform and had a generic class for
parsing, stringifying, and comparing IDs. The intention is that anyone who
uses this code can simply copy guid.h and guid.cpp into their project and
define one of the following preprocessor flags to control the implementation:

  * GUID_LIBUUID - Uses libuuid which is normally used on linux but possibly
  usable
    elsewhere as well.
  * GUID_CFUUID - Uses CFCreateUUID from Apple's CoreFoundation framework. This
    works on both Mac OSX and iOS.
  * GUID_WINDOWS - Uses the built in CoCreateGuid function in Windows.  *
  GUID_ANDROID - Uses JNI to invoke Java functions from Android SDK.

I recommend taking the time to actually look at the guid.h and guid.cpp so
that you can see how simple they are. It should be pretty trivial to modify
the code to match your naming conventions or drop it into a namespace so
that it fits in nicely with your code base.
EOF
