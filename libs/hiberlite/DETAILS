source $GRIMOIRE/CMAKE_FUNCTIONS
. "$GRIMOIRE/FUNCTIONS"
           SPELL=hiberlite
         VERSION=$(get_scm_version)
          SOURCE=$SPELL-scm.tar.bz2
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-scm"
  FORCE_DOWNLOAD=on
   SOURCE_IGNORE=volatile
   SOURCE_URL[0]=git://github.com/paulftw/${SPELL}.git:$SPELL
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/${SPELL}-scm"
        WEB_SITE="https://github.com/paulftw/$SPELL"
      LICENSE[0]=BSD
         ENTERED=20191201
           SHORT="C++ ORM for SQLite"
cat << EOF
C++ object-relational mapping with API inspired by the awesome
Boost.Serialization - that means almost no API to learn.

Key features of Hiberlite are:

 * Boost.Serialization like API * no code generators / preprocessors * support
 for one-to-many and many-to-many relations * automatic code generation *
 lazy loading * smart pointers * no need to inherit from a single base class

In contrast to most serialization libraries with SQL serializers, C++
objects mapped with hiberlite behave similar to active record pattern -
you are not forced to follow the "read all your data/modify some small
part/write everything back" path.

For people who need reliable data storage, ACID transactions, simple
random-access to their data files, and don't like coding in SQL.
EOF
