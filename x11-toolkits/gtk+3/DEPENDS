. "$GRIMOIRE/FUNCTIONS" &&

depends meson &&
depends python3 &&
depends ninja-build-system &&

if [[ "$GTK_VER" == "devel" ]]; then
  depends -sub GLIB_DEVEL glib2 &&
  depends -sub "CAIRO_DEVEL PDF PS SVG X GOBJ" cairo &&
  optional_depends -sub GOBJ_DEVEL gobject-introspection \
                                 "introspection=true" \
                                 "introspection=false" \
                                 "to enable introspection support"
else
  depends glib2 &&
  depends -sub "PDF PS SVG X GOBJ" cairo &&
  optional_depends gobject-introspection \
                                 "introspection=true" \
                                 "introspection=false" \
                                 "to enable introspection support"
fi

depends gdk-pixbuf2 &&
simple_version_check_force_depends gdk-pixbuf2 226 3 &&
depends atk &&
simple_version_check_force_depends atk 253 3 &&
depends pango &&
simple_version_check_force_depends pango 130 3 &&

depends at-spi2-atk &&
depends libsm &&
depends libxext &&
depends libxcursor &&
depends libxrender &&
depends libepoxy   &&

optional_depends gtk-doc \
                 "gtk_doc=true" \
                 "gtk_doc=false" \
                 "Build documentation with gtk-doc" &&

# FIXME add print backends
# - cloudprint, depends on oauth
# - papi?
# - lpr
optional_depends cups \
                 "print_backends=cups,file" \
                 "print_backends=file" \
                 "Enable CUPS print backend support?" &&

if is_depends_enabled "${SPELL}" "cups"; then
  optional_depends colord \
                   colord={yes,no} \
                  "Build colord support for CUPS print backend"
fi &&

optional_depends libx11 \
                 "x11_backend=true" \
                 "x11_backend=false" \
                 "to enable X11 backend" &&

if is_depends_enabled "${SPELL}" "libx11"; then
  depends at-spi2-atk &&
  depends fontconfig &&
  depends libxcursor &&
  depends libxext &&
  depends libxrender &&

  optional_depends libxcomposite \
                   "" \
                   "" \
                   "for X11 Compositing support" &&

  optional_depends libxdamage \
                   "" \
                   "" \
                   "for X11 Damaged region extension support" &&

  optional_depends libxfixes \
                   "" \
                   "" \
                   "for X11 workarounds for various limitations" &&

  optional_depends libxrandr \
                   "" \
                   "" \
                   "for X11 Resize and Rotate support"
fi &&

optional_depends libxinerama \
                 "xinerama=yes" \
                 "xinerama=no" \
                 "for X11 Xinerama extension support" &&

optional_depends wayland \
                 "wayland_backend=true" \
                 "wayland_backend=false" \
                 "to enable Wayland backend" &&

if is_depends_enabled "${SPELL}" "wayland"; then
  depends wayland-protocols
fi
