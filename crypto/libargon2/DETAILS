           SPELL=libargon2
         VERSION=20190702
          SOURCE="$SPELL-$VERSION.tar.gz"
   SOURCE_URL[0]=https://github.com/P-H-C/phc-winner-argon2/archive/${VERSION}.tar.gz
     SOURCE_HASH=sha512:0a4cb89e8e63399f7df069e2862ccd05308b7652bf4ab74372842f66bcc60776399e0eaf979a7b7e31436b5e6913fe5b0a6949549d8c82ebd06e0629b106e85f
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/phc-winner-argon2-$VERSION"
        WEB_SITE="https://github.com/p-h-c/phc-winner-argon2"
      LICENSE[0]="CC0 or Apache"
         ENTERED=20180806
           SHORT="a password hashing function"
cat << EOF
Argon2 is a password-hashing function that summarizes the state of the art
in the design of memory-hard functions and can be used to hash passwords
for credential storage, key derivation, or other applications.

It has a simple design aimed at the highest memory filling rate and effective
use of multiple computing units, while still providing defense against
tradeoff attacks (by exploiting the cache and memory organization of the recent
         processors).

Argon2 has three variants: Argon2i, Argon2d, and Argon2id. Argon2d is faster
and uses data-depending memory access, which makes it highly resistant
against GPU cracking attacks and suitable for applications with no threats
from side-channel timing attacks (eg. cryptocurrencies). Argon2i instead uses
data-independent memory access, which is preferred for password hashing and
password-based key derivation, but it is slower as it makes more passes over
the memory to protect from tradeoff attacks. Argon2id is a hybrid of Argon2i
and Argon2d, using a combination of data-depending and data-independent
memory accesses, which gives some of Argon2i's resistance to side-channel
cache timing attacks and much of Argon2d's resistance to GPU cracking attacks.
EOF
