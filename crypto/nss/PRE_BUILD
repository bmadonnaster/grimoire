default_pre_build &&
cd "$SOURCE_DIRECTORY" &&

case "${NSS_BRANCH}" in
  3.1[7-9] | 3.20) patch -p1 < "${SPELL_DIRECTORY}/nss-3.17.2-standalone-2.patch" ;;
      3.15 | 3.16) patch -p1 < "${SCRIPT_DIRECTORY}/nss-3.15.1-standalone-2.patch" ;;
             3.14) patch -p1 < "${SCRIPT_DIRECTORY}/nss-3.14-config-1.patch" ;;
         3.2[1-7]) patch -p1 < "${SCRIPT_DIRECTORY}/nss-3.21-standalone-1.patch" ;;
  3.2[8,9] | 3.30) patch -p1 < "${SCRIPT_DIRECTORY}/nss-3.28.1-standalone-1.patch" ;;
         3.3[2-8]) patch -p1 < "${SCRIPT_DIRECTORY}/nss-3.32-standalone-1.patch" ;;
                *) patch -p1 < "${SCRIPT_DIRECTORY}/nss-3.12-config-1.patch"
esac &&

if [[ "$NSS_PEM" == "y" ]]; then
  # New or old source trees are easy to tell apart.
  if test -e nss; then
    tar jxvf $SCRIPT_DIRECTORY/nss-pem-20140808.tar.bz2 &&
    patch -p3 < $SCRIPT_DIRECTORY/nss-enable-pem.patch
  else
    # Playing safe with old stuff, no new PEM source there.
    tar jxvf $SCRIPT_DIRECTORY/nss-pem-20100412.tar.bz2 &&
    patch -p0 < $SCRIPT_DIRECTORY/nss-enable-pem.patch
  fi  &&
  if [[ $NSS_BRANCH == "3.14" ]]; then
    patch -p1 < $SPELL_DIRECTORY/nss-3.14.3_sync_with_upstream_softokn_changes.patch
  fi
fi
