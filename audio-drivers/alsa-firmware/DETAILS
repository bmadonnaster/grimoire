. "$GRIMOIRE/FUNCTIONS"
           SPELL=alsa-firmware
if [[ $ALSA_FIRMWARE_BRANCH == scm ]]; then
         VERSION=$(get_scm_version)
          SOURCE=$SPELL-git.tar.bz2
   SOURCE_URL[0]=git://git.alsa-project.org/alsa-firmware.git:alsa-firmware-git
   SOURCE_IGNORE=volatile
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-git
  FORCE_DOWNLOAD=1
else
         VERSION=1.2.4
          SOURCE=$SPELL-$VERSION.tar.bz2
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=ftp://ftp.alsa-project.org/pub/firmware/$SOURCE
     SOURCE_HASH=sha512:041f54744fe30fa94781968c89c77ab9073fc9a828014d07a0f7e0f11c4185ace6846d5d2a313fcca6e9cda6e4837fd6f62e883b0fdb0a4e30a8c18ba7b2e05d
fi
        WEB_SITE=http://www.alsa-project.org/
         ENTERED=20031205
         ARCHIVE="off"
      LICENSE[0]=GPL
        KEYWORDS="drivers audio"
           SHORT="This is the firmware pack for some specific soundcard."
cat << EOF
From http://www.alsa-project.org/intro.php3
The Advanced Linux Sound Architecture project is being developed in the
Linux operating system and is released under version 2 of the GPL (GNU
general public license) and the LGPL (GNU library general public license).

Primary goals: 

1. Create a fully modularized sound driver which supports kerneld and kmod.

2. Create the ALSA Kernel API which surpasses the current OSS API.

3. Maintain compatibility with most OSS/Lite binaries.

4. Create the ALSA Library (C, C++), which simplifies ALSA application
development.

5. Create the ALSA Manager, an interactive configuration program for
the driver.

Lastly, this sorcery spell supports one and only one sound card.
If you have more or it is ISA, then you will likely have to create
a custom spell.
EOF
