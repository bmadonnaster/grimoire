. "${GRIMOIRE}/FUNCTIONS" &&
depends meson &&
depends ninja-build-system &&
depends python3 &&
depends -sub "CXX" gcc &&
depends bison &&
depends flex  &&
depends GETTEXT   &&
depends -sub "$MESA_DRM" libdrm &&
depends util-macros &&
depends expat &&
depends libxdamage &&
depends libx11 &&
depends xorgproto &&
depends libxshmfence &&
depends -sub "PYTHON3" mako &&
depends libxrandr &&

depends nettle  &&
depends zlib    &&

if (list_find "${MESA_GALLIUM}" "radeonsi") ||
   (list_find "$MESA_VULKAN" amd); then
  depends -sub AMD llvm &&
  depends LIBELF
else
  optional_depends llvm 'llvm=true' 'llvm=false' 'LLVM support'
fi &&

if list_find "$MESA_GLX" dri;then
  depends libxext &&
  depends libxxf86vm &&
  depends libxfixes &&
  depends libxcb
fi &&
if list_find "$MESA_EGL" wayland;then
  depends wayland &&
  depends wayland-protocols
fi &&

if [[ "${MESA_BRANCH}" == "scm" ]]; then
  depends git
fi &&

optional_depends libvdpau 'gallium-vdpau=true' 'gallium-vdpau=false' 'gallium vdpau state tracker' &&
optional_depends libxvmc  'gallium-xvmc=true'  'gallium-xvmc=false'  'gallium xvmc state tracker(obsolete)' &&
optional_depends libva    'gallium-va=true'    'gallium-va=false'    'gallium va state tracker' &&
#optional_depends libomxil 'gallium-omx=bellagio'   'gallium-omx=disabled'   'gallium omx bellagio state tracker' &&
#optional_depends tizonia  'gallium-omx=tizonia'   'gallium-omx=disabled'   'gallium omx state tracker' &&
#optional_depends libxa    '' '' 'gallium xa state tracker' &&
optional_depends lm_sensors "lmsensors=true" "lmsensors=false" "HUD Sensor support" &&
optional_depends valgrind "valgrind=true" "valgrind=false" "debugging" &&
optional_depends libunwind "libunwind=true" "libunwind=false" "for stack-traces" &&
optional_depends libselinux "selinux=true" "selinux=false" "SELinux-aware Mesa" &&
optional_depends libglvnd "glvnd=true" "glvnd=false" "enable GLVND support'" &&

if ! is_depends_enabled "${SPELL}" "libglvnd"; then
  optional_depends smgl-gl_select '' '' 'allow select OPENGL provider'
fi
