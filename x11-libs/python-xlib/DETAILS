           SPELL=python-xlib
         VERSION=0.29
          SOURCE=$SPELL-$VERSION.tar.gz
SOURCE_DIRECTORY=$BUILD_DIRECTORY/$SPELL-$VERSION
   SOURCE_URL[0]=https://github.com/python-xlib/python-xlib/archive/${VERSION}.tar.gz
     SOURCE_HASH=sha512:58e36ee66f8ba87a7427a0189fa6c5c67232c84c47bfb2226ce946d2e306dd102fad15b81be03f0a949aa3f6d34404b07e74d6d39d61f22b1a00b607b2404a86
      LICENSE[0]=GPL
	WEB_SITE=https://github.com/python-xlib/python-xlib
         ENTERED=20040430
        KEYWORDS="python x11 libs"
           SHORT='The Python X Library is intended to be a fully functional X client library for Python Programs.'
cat << EOF
The Python X Library is intended to be a fully functional X client library
for Python programs. It is written entirely in Python, in contrast to earlier
X libraries for Python (the ancient X extension and the newer plxlib) which
were interfaces to the C Xlib.

This is possible to do since X client programs communicate with the X server
via the X protocol. The communication takes place over TCP/IP, Unix sockets,
DECnet or any other suitable streaming network protocol. The C Xlib is merely
an interface to this protocol, providing functions suited for a C environment.

There are three advantages of choosing to implement a pure Python library:

*Integration: The library can make use of the wonderful object system in
Python, providing an easy-to-use class hierarchy.
* Portability: The library will be usable on (almost) any computer which
have Python installed. A C interface could be problematic to port to non-Unix
systems, such as MS Windows or OpenVMS.
* Maintainability: It is much easier to develop and debug native Python
modules than modules written in C.
EOF
