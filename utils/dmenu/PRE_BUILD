default_pre_build      &&
cd ${SOURCE_DIRECTORY} &&

if [[ $DMENU_PASSWORD == y ]]; then
  verify_file 2 &&

  interdiff ${SOURCE_CACHE}/${SOURCE2} /dev/null > "${SOURCE_DIRECTORY}/${SOURCE2}" &&
  patch -p0 < "${SPELL_DIRECTORY}/password.patch" &&
  patch -p1 < "${SOURCE_DIRECTORY}/${SOURCE2}"
fi &&

if [[ $DMENU_LINEHEIGHT == y ]]; then
  verify_file 3 &&

  cat ${SOURCE_CACHE}/${SOURCE3} | sed "s:@@ -683,6 +684,7 @@:@@ -685,6 +686,7 @@:" | patch -p1 -F3 # ignore context in case previous patch was applied
fi &&

if [[ $DMENU_XRESOURCES_ALT == y ]]; then
  verify_file 9 &&

  cat ${SOURCE_CACHE}/${SOURCE9} > "${SOURCE_DIRECTORY}/${SOURCE9}" &&
  patch -p0 < "${SPELL_DIRECTORY}/xresources-alt.patch" &&

  if [[ $DMENU_FUZZYHIGHLIGHT == y ]]; then
    patch -p0 < "${SPELL_DIRECTORY}/xresources-alt_fhl.patch"
  fi

  patch -p1 < "${SOURCE_DIRECTORY}/${SOURCE9}"
fi &&

if [[ $DMENU_MOUSE_SUPPORT == y ]]; then
  verify_file 4 &&

  cat ${SOURCE_CACHE}/${SOURCE4} | patch -p1
fi &&

if [[ $DMENU_NUMBERS == y ]]; then
  verify_file 5 &&

  cat ${SOURCE_CACHE}/${SOURCE5} | patch -p1
fi &&

if [[ $DMENU_XYW == y ]]; then
  verify_file 6 &&

  if [[ $DMENU_PASSWORD == y ]] || [[ $DMENU_LINEHEIGHT == y ]]; then
    if [[ $DMENU_MOUSE_SUPPORT == y ]]; then
      cat ${SOURCE_CACHE}/${SOURCE6} | sed "s:@@ -690,6 +693,7 @@:@@ -691,6 +694,7 @@:" | patch -p1 -F3 # ignore context in case password/lineheight patch was applied
    else
      cat ${SOURCE_CACHE}/${SOURCE6} | patch -p1 -F3 # ignore context in case password/lineheight patch was applied
    fi
  else
    cat ${SOURCE_CACHE}/${SOURCE6} | patch -p1
  fi
fi &&

if [[ $DMENU_FUZZYMATCH == y ]]; then
  verify_file 7 &&

  cat ${SOURCE_CACHE}/${SOURCE7} > "${SOURCE_DIRECTORY}/${SOURCE7}" &&

  if [[ $DMENU_XRESOURCES_ALT == y ]]; then
    patch -p0 < "${SPELL_DIRECTORY}/fuzzymatch_xra.patch"
  else
    patch -p0 < "${SPELL_DIRECTORY}/fuzzymatch.patch"
  fi &&

  patch -p1 < "${SOURCE_DIRECTORY}/${SOURCE7}" &&

  sedit "s:-bfi:-bfiF:" "${SOURCE_DIRECTORY}/dmenu.c"
fi &&

if [[ $DMENU_FUZZYHIGHLIGHT == y ]]; then
  verify_file 8 &&

  cat ${SOURCE_CACHE}/${SOURCE8} > "${SOURCE_DIRECTORY}/${SOURCE8}" &&
  patch -p0 < "${SPELL_DIRECTORY}/fuzzyhighlight.patch"

  if [[ $DMENU_XRESOURCES_ALT == y ]]; then
    patch -p0 < "${SPELL_DIRECTORY}/fuzzyhighlight_xra.patch"
  fi &&

  patch -p1 -F3 < "${SOURCE_DIRECTORY}/${SOURCE8}"
fi &&

if is_version_less $(installed_version fontconfig) 2.11.91; then
  echo '#define FC_COLOR "color"' >> drw.h
fi &&

# Fix flags and system paths
sedit '
	/^PREFIX *=/{s@=.*@= '"$INSTALL_ROOT"'/usr@}
	/^\(C\|LD\)FLAGS *=/{s@=@+=@}
	s@= *-[IL][$](X11...)@=@
'     config.mk
