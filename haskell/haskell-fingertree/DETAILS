           SPELL=haskell-fingertree
         VERSION=0.1.3.1
          SOURCE="fingertree-${VERSION}.tar.gz"
   SOURCE_URL[0]=https://hackage.haskell.org/package/fingertree-${VERSION}/${SOURCE}
     SOURCE_HASH=sha512:7bd2ee7d6fc97b9bcabe62bd78853e48d3db4612f6c45e17f21d6a8515c284b7adf795c9ab0f22d87cfcb05cee04085b6b724be8b1b6b160eade98882af8db8a
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/fingertree-${VERSION}"
        WEB_SITE="https://hackage.haskell.org/package/fingertree"
      LICENSE[0]=BSD
         ENTERED=20150802
           SHORT="generic finger-tree structure, with example instances"
cat << EOF
A general sequence representation with arbitrary annotations, for use as
a base for implementations of various collection types, with examples,
as described in section 4 of

    Ralf Hinze and Ross Paterson, "Finger trees: a simple general-purpose
    data structure", Journal of Functional Programming 16:2 (2006) pp 197-217.
    http://staff.city.ac.uk/~ross/papers/FingerTree.html

For a tuned sequence type, see Data.Sequence in the containers package,
which is a specialization of this structure.
EOF
