           SPELL=haskell-vault
         VERSION=0.3.1.2
          SOURCE="vault-$VERSION.tar.gz"
   SOURCE_URL[0]=http://hackage.haskell.org/package/vault-$VERSION/$SOURCE
     SOURCE_HASH=sha512:962f50f521f1408e6c23cf8a8121d261815da41786bbf98aea5c6f42c31dbdfd504bdb44083d5e26daa90f5a6504aba2064b6229f69b27e63b63a380f10b9c5e
SOURCE_DIRECTORY="$BUILD_DIRECTORY/vault-$VERSION"
        WEB_SITE="https://github.com/HeinrichApfelmus/vault"
      LICENSE[0]="BSD3"
         ENTERED=20150626
        KEYWORDS=""
           SHORT="persistent store for arbitrary typed values"
cat << EOF
A /vault/ is a persistent store for values of arbitrary types.  It's like
having first-class access to the storage space behind IORefs.

The data structure is analogous to a bank vault, where you can access
different bank boxes with different keys; hence the name.

Also provided is a /locker/ type, representing a store for a single element.
EOF
