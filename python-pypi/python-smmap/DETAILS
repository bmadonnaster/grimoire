           SPELL=python-smmap
         VERSION=4.0.0
          SOURCE="smmap-$VERSION.tar.gz"
   SOURCE_URL[0]=https://github.com/gitpython-developers/smmap/archive/v$VERSION.tar.gz
     SOURCE_HASH=sha512:53a3fcb21662a1a0feb34cf191117d1d822b231ce9f2660f65a033c5a651764e6ceb6b9c840861276cb81b0515fbc2cde08d94703c89497a8322eaad5e3a1abe
SOURCE_DIRECTORY="$BUILD_DIRECTORY/smmap-$VERSION"
        WEB_SITE="http://smmap.readthedocs.org/"
      LICENSE[0]="BSD-3-Clause"
         ENTERED=20210318
        KEYWORDS=""
           SHORT="A sliding memory map manager"
cat << EOF
Smmap wraps an interface around mmap and tracks the mapped files as well
as the amount of clients who use it. If the system runs out of resources,
or if a memory limit is reached, it will automatically unload unused maps
to allow continued operation.

To allow processing large files even on 32 bit systems, it allows only
portions of the file to be mapped. Once the user reads beyond the mapped
region, smmap will automatically map the next required region, unloading
unused regions using a LRU algorithm.

Although the library can be used most efficiently with its native interface,
a Buffer implementation is provided to hide these details behind a simple
string-like interface.

For performance critical 64 bit applications, a simplified version of memory
mapping is provided which always maps the whole file, but still provides
the benefit of unloading unused mappings on demand.
EOF
