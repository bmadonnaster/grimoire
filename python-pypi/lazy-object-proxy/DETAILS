           SPELL=lazy-object-proxy
         VERSION=1.6.0
              VX=bb/f5/646893a04dcf10d4acddb61c632fd53abb3e942e791317dcdd57f5800108
          SOURCE="$SPELL-$VERSION.tar.gz"
   SOURCE_URL[0]=https://pypi.python.org/packages/$VX/$SOURCE
     SOURCE_HASH=sha512:81a9731aa22afdd8c7859abf12ed6041f2fab533566dc537159bbb88c2afc4a0996953db20524ee58dbccf6da8e24f7bb38a3fa71994924100dd2b635234ac38
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
        WEB_SITE="https://github.com/ionelmc/python-lazy-object-proxy"
      LICENSE[0]="BSD-2"
         ENTERED=20170825
        KEYWORDS=""
           SHORT="A fast and thorough lazy object proxy"
cat << EOF
A fast and thorough lazy object proxy.

Note that this is based on wraptâ€™s ObjectProxy with one big change: it calls
a function the first time the proxy object is used, while wrapt.ObjectProxy
just forwards the method calls to the target object.

In other words, you use lazy-object-proxy when you only have the object way
later and you use wrapt.ObjectProxy when you want to override few methods
(by subclassing) and forward everything else to the target object.
EOF
