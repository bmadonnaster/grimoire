           SPELL=lazy-object-proxy
         VERSION=1.3.1
              VX=55/08/23c0753599bdec1aec273e322f277c4e875150325f565017f6280549f554
          SOURCE="$SPELL-$VERSION.tar.gz"
   SOURCE_URL[0]=https://pypi.python.org/packages/$VX/$SOURCE
     SOURCE_HASH=sha512:9ea4fa0185431859ff79fd6dc59106c2b64e372b5052d034b3638e362695f10b27b59f57c5aed73bb2350d3963f98190e3069f9129b9f3f4932212f9b5460962
SOURCE_DIRECTORY="$BUILD_DIRECTORY/$SPELL-$VERSION"
        WEB_SITE="https://github.com/ionelmc/python-lazy-object-proxy"
      LICENSE[0]="BSD-2"
         ENTERED=20170825
        KEYWORDS=""
           SHORT="A fast and thorough lazy object proxy"
cat << EOF
A fast and thorough lazy object proxy.

Note that this is based on wraptâ€™s ObjectProxy with one big change: it calls
a function the first time the proxy object is used, while wrapt.ObjectProxy
just forwards the method calls to the target object.

In other words, you use lazy-object-proxy when you only have the object way
later and you use wrapt.ObjectProxy when you want to override few methods
(by subclassing) and forward everything else to the target object.
EOF
