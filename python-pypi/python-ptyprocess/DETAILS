           SPELL=python-ptyprocess
         VERSION=0.7.0
          SOURCE="$SPELL-$VERSION.tar.gz"
   SOURCE_URL[0]=https://pypi.io/packages/source/p/ptyprocess/ptyprocess-$VERSION.tar.gz
     SOURCE_HASH=sha512:791d8f2e79900627215ce80ce67ee9c79173dbc08297c6219d5058f9b80c5e323b93049e6836a70c4073f43548d22e3cf310f2e9948ef12f96bcaa15b0ddb2f3
SOURCE_DIRECTORY="${BUILD_DIRECTORY}/ptyprocess-$VERSION"
        WEB_SITE="https://github.com/pexpect/ptyprocess"
      LICENSE[0]=ISC
         ENTERED=20191221
           SHORT="launch a subprocess in a pseudo terminal (pty), and interact with both the process and its pty"
cat << EOF
Please enter a description of the spell here Sometimes, piping stdin and stdout
is not enough.There might be a password prompt that doesn 't read from stdin,
output that changes when it' s going to a pipe rather than a terminal, or
curses - style interfaces that rely on a terminal.If you need to automate these
things, running the process in a pseudo terminal(pty) is the answer.
EOF
