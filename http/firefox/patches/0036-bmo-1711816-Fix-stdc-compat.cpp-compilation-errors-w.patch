From fef46785dd742c856c792af3b96fa07b5a21f712 Mon Sep 17 00:00:00 2001
From: Thomas Deutschmann <whissi@gentoo.org>
Date: Fri, 28 May 2021 23:03:28 +0200
Subject: [PATCH 36/37] bmo#1711816: Fix stdc++compat.cpp compilation errors
 with recent GCC

Signed-off-by: Thomas Deutschmann <whissi@gentoo.org>
---
 build/unix/stdc++compat/stdc++compat.cpp | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/build/unix/stdc++compat/stdc++compat.cpp b/build/unix/stdc++compat/stdc++compat.cpp
index dd1ebcecbf..8c4eed5997 100644
--- a/build/unix/stdc++compat/stdc++compat.cpp
+++ b/build/unix/stdc++compat/stdc++compat.cpp
@@ -4,6 +4,7 @@
 
 #include <ostream>
 #include <istream>
+#include <memory>
 #include <string>
 #include <stdarg.h>
 #include <stdio.h>
@@ -48,12 +49,14 @@ void __attribute__((weak)) __throw_out_of_range_fmt(char const* fmt, ...) {
 #endif
 
 #if MOZ_LIBSTDCXX_VERSION >= GLIBCXX_VERSION(3, 4, 20)
+namespace __cxxabiv1 {
 /* Technically, this symbol is not in GLIBCXX_3.4.20, but in CXXABI_1.3.8,
    but that's equivalent, version-wise. Those calls are added by the compiler
    itself on `new Class[n]` calls. */
 extern "C" void __attribute__((weak)) __cxa_throw_bad_array_new_length() {
   MOZ_CRASH();
 }
+}  // namespace __cxxabiv1
 #endif
 
 #if MOZ_LIBSTDCXX_VERSION >= GLIBCXX_VERSION(3, 4, 21)
-- 
2.31.1

