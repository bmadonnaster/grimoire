From 4e158b3959de188bef6335d736e4ca31f322e4c3 Mon Sep 17 00:00:00 2001
From: Treeve Jelbert <treeve@sourcemage.org>
Date: Sun, 15 Nov 2020 20:42:53 +0100
Subject: [PATCH 3/9] fix detection fo gettimeofday and pthread* for glibc-2,32

---
 builds/cmake/Configure.cmake | 10 ++++------
 1 file changed, 4 insertions(+), 6 deletions(-)

diff --git a/builds/cmake/Configure.cmake b/builds/cmake/Configure.cmake
index 9faa0e50eb..b9ebd4d390 100644
--- a/builds/cmake/Configure.cmake
+++ b/builds/cmake/Configure.cmake
@@ -244,6 +244,7 @@ set(functions_list
     time times
     vfork
 )
+set(CMAKE_REQUIRED_LIBRARIES pthread)
 check_functions(functions_list)
 
 if (APPLE)
@@ -287,13 +288,11 @@ set(CMAKE_EXTRA_INCLUDE_FILES Windows.h)
 check_type_size("char[MAX_PATH]" MAXPATHLEN)
 set(CMAKE_EXTRA_INCLUDE_FILES)
 
-set(TIMEZONE_TYPE "struct timezone")
-if (APPLE OR MINGW)
-    set(TIMEZONE_TYPE "void")
-endif()
+# SINCE GLIBC-2.31
+#set(TIMEZONE_TYPE "void")
 check_prototype_definition(
     gettimeofday
-    "int gettimeofday(struct timeval *tv, ${TIMEZONE_TYPE} *tz)"
+    "int gettimeofday(struct timeval *tv, void *tz)"
     0
     "sys/time.h"
     GETTIMEOFDAY_RETURNS_TIMEZONE
@@ -315,7 +314,6 @@ check_c_source_compiles("#include <unistd.h>\nmain(){setpgrp();}" SETPGRP_VOID)
 check_c_source_compiles("__thread int a = 42;main(){a = a + 1;}" HAVE___THREAD)
 check_c_source_compiles("#include <sys/time.h>\n#include <time.h>\nmain(){}" TIME_WITH_SYS_TIME)
 
-set(CMAKE_REQUIRED_LIBRARIES pthread)
 check_c_source_compiles("#include <semaphore.h>\nmain(){sem_t s;sem_init(&s,0,0);}" WORKING_SEM_INIT)
 set(CMAKE_REQUIRED_LIBRARIES)
 
-- 
2.32.0

