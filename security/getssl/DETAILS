. "$GRIMOIRE/FUNCTIONS"
           SPELL=getssl
if [[ $GETSSL_BRANCH == scm ]]; then
         VERSION=$(get_scm_version)
          SOURCE=$SPELL-scm.tar.bz2
   SOURCE_URL[0]=git://github.com/srvrco/getssl.git
  FORCE_DOWNLOAD=on
   SOURCE_IGNORE=volatile
SOURCE_DIRECTORY=${BUILD_DIRECTORY}/${SPELL}-scm
else
         VERSION=2.20
          SOURCE=${SPELL}-${VERSION}.tar.gz
   SOURCE_URL[0]=https://github.com/srvrco/${SPELL}/archive/v${VERSION}.tar.gz
     SOURCE_HASH=sha512:938e688eec4f794f27449ea18165b3888538e43d05b2cf86dde44823a1801da0455f209744e40875c107c48e52b38c14d0042cf9fc292a21a4d94fa8d50cbd1c
SOURCE_DIRECTORY=${BUILD_DIRECTORY}/${SPELL}-${VERSION}
fi
        WEB_SITE=https://github.com/srvrco/getssl
         ENTERED=20170424
      LICENSE[0]=GPLv3
        KEYWORDS=""
           SHORT="Obtain SSL certificates from the letsencrypt.org ACME server."
cat << EOF
Obtain SSL certificates from the letsencrypt.org ACME server. Suitable
for automating the process on remote servers.

Features
* Bash - It runs on virtually all unix machines, including BSD, most
  Linux distributions, MAC OSX.
* Get certificates for remote servers - The tokens used to provide
  validation of domain ownership, and the certificates themselves can be
  automatically copied to remote servers (via ssh, sftp or ftp for
  tokens). The script doesn't need to run on the server itself. This can
  be useful if you don't have access to run such scripts on the server
  itself, as it's a shared server for example.
* Runs as a daily cron - so certificates will be automatically renewed
  when required.
* Automatic certificate renewals
* Checks certificates are correctly loaded. After installation of a new
  certificate it will test the port specified ( see Server-Types for
  options ) that the certificate is actually being used correctly.
* Automatically updates - The script can automatically update itself
  with bug fixes etc if required.
* Extensively configurable - With a simple configuration file for each
  certificate it is possible to configure it exactly for your needs,
  whether a simple single domain or multiple domains across multiple
  servers on the same certificate.
* Supports http and dns challenges - Full ACME implementation
* Simple and easy to use
* Detailed debug info - Whilst it shouldn't be needed, detailed debug
  information is available.
* Reload services - After a new certificate is obtained then the
  relevant services (e.g. apache/nginx/postfix) can be reloaded.
EOF
